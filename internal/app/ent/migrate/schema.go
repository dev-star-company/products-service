// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BrandsColumns holds the columns for the "brands" table.
	BrandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// BrandsTable holds the schema information for the "brands" table.
	BrandsTable = &schema.Table{
		Name:       "brands",
		Columns:    BrandsColumns,
		PrimaryKey: []*schema.Column{BrandsColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "category_id", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category_children", Type: field.TypeInt, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "categories_categories_children",
				Columns:    []*schema.Column{CategoriesColumns[9]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FeaturesColumns holds the columns for the "features" table.
	FeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "feature_value_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
	}
	// FeaturesTable holds the schema information for the "features" table.
	FeaturesTable = &schema.Table{
		Name:       "features",
		Columns:    FeaturesColumns,
		PrimaryKey: []*schema.Column{FeaturesColumns[0]},
	}
	// FeaturesUnitValuesColumns holds the columns for the "features_unit_values" table.
	FeaturesUnitValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "decimals", Type: field.TypeInt, Nullable: true},
	}
	// FeaturesUnitValuesTable holds the schema information for the "features_unit_values" table.
	FeaturesUnitValuesTable = &schema.Table{
		Name:       "features_unit_values",
		Columns:    FeaturesUnitValuesColumns,
		PrimaryKey: []*schema.Column{FeaturesUnitValuesColumns[0]},
	}
	// FeaturesValuesColumns holds the columns for the "features_values" table.
	FeaturesValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "feature_values_id", Type: field.TypeInt, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "feature_id", Type: field.TypeInt},
		{Name: "feature_unit_values_id", Type: field.TypeInt, Nullable: true},
		{Name: "features_values_types_feature_values", Type: field.TypeInt, Nullable: true},
	}
	// FeaturesValuesTable holds the schema information for the "features_values" table.
	FeaturesValuesTable = &schema.Table{
		Name:       "features_values",
		Columns:    FeaturesValuesColumns,
		PrimaryKey: []*schema.Column{FeaturesValuesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "features_values_features_feature_values",
				Columns:    []*schema.Column{FeaturesValuesColumns[9]},
				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "features_values_features_unit_values_feature_values",
				Columns:    []*schema.Column{FeaturesValuesColumns[10]},
				RefColumns: []*schema.Column{FeaturesUnitValuesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "features_values_features_values_types_feature_values",
				Columns:    []*schema.Column{FeaturesValuesColumns[11]},
				RefColumns: []*schema.Column{FeaturesValuesTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FeaturesValuesTypesColumns holds the columns for the "features_values_types" table.
	FeaturesValuesTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// FeaturesValuesTypesTable holds the schema information for the "features_values_types" table.
	FeaturesValuesTypesTable = &schema.Table{
		Name:       "features_values_types",
		Columns:    FeaturesValuesTypesColumns,
		PrimaryKey: []*schema.Column{FeaturesValuesTypesColumns[0]},
	}
	// ImageFolderPathsColumns holds the columns for the "image_folder_paths" table.
	ImageFolderPathsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "image_folder_source_id", Type: field.TypeInt},
	}
	// ImageFolderPathsTable holds the schema information for the "image_folder_paths" table.
	ImageFolderPathsTable = &schema.Table{
		Name:       "image_folder_paths",
		Columns:    ImageFolderPathsColumns,
		PrimaryKey: []*schema.Column{ImageFolderPathsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "image_folder_paths_image_folder_sources_image_folder_path",
				Columns:    []*schema.Column{ImageFolderPathsColumns[7]},
				RefColumns: []*schema.Column{ImageFolderSourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ImageFolderSourcesColumns holds the columns for the "image_folder_sources" table.
	ImageFolderSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "base_url", Type: field.TypeString},
		{Name: "access_key", Type: field.TypeString, Nullable: true},
		{Name: "secret_key", Type: field.TypeString, Nullable: true},
	}
	// ImageFolderSourcesTable holds the schema information for the "image_folder_sources" table.
	ImageFolderSourcesTable = &schema.Table{
		Name:       "image_folder_sources",
		Columns:    ImageFolderSourcesColumns,
		PrimaryKey: []*schema.Column{ImageFolderSourcesColumns[0]},
	}
	// ImagesColumns holds the columns for the "images" table.
	ImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "content", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "image_folder_path_id", Type: field.TypeInt},
		{Name: "products_images", Type: field.TypeInt, Nullable: true},
	}
	// ImagesTable holds the schema information for the "images" table.
	ImagesTable = &schema.Table{
		Name:       "images",
		Columns:    ImagesColumns,
		PrimaryKey: []*schema.Column{ImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "images_image_folder_paths_images",
				Columns:    []*schema.Column{ImagesColumns[9]},
				RefColumns: []*schema.Column{ImageFolderPathsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "images_products_images",
				Columns:    []*schema.Column{ImagesColumns[10]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// InfoTypesColumns holds the columns for the "info_types" table.
	InfoTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// InfoTypesTable holds the schema information for the "info_types" table.
	InfoTypesTable = &schema.Table{
		Name:       "info_types",
		Columns:    InfoTypesColumns,
		PrimaryKey: []*schema.Column{InfoTypesColumns[0]},
	}
	// PriceTypesColumns holds the columns for the "price_types" table.
	PriceTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// PriceTypesTable holds the schema information for the "price_types" table.
	PriceTypesTable = &schema.Table{
		Name:       "price_types",
		Columns:    PriceTypesColumns,
		PrimaryKey: []*schema.Column{PriceTypesColumns[0]},
	}
	// ProductHasFeaturesColumns holds the columns for the "product_has_features" table.
	ProductHasFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "feature_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductHasFeaturesTable holds the schema information for the "product_has_features" table.
	ProductHasFeaturesTable = &schema.Table{
		Name:       "product_has_features",
		Columns:    ProductHasFeaturesColumns,
		PrimaryKey: []*schema.Column{ProductHasFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_has_features_features_product_has_feature",
				Columns:    []*schema.Column{ProductHasFeaturesColumns[7]},
				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_has_features_products_product_has_feature",
				Columns:    []*schema.Column{ProductHasFeaturesColumns[8]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductHasImagesColumns holds the columns for the "product_has_images" table.
	ProductHasImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "priority", Type: field.TypeInt},
		{Name: "image_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductHasImagesTable holds the schema information for the "product_has_images" table.
	ProductHasImagesTable = &schema.Table{
		Name:       "product_has_images",
		Columns:    ProductHasImagesColumns,
		PrimaryKey: []*schema.Column{ProductHasImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_has_images_images_product_has_image",
				Columns:    []*schema.Column{ProductHasImagesColumns[8]},
				RefColumns: []*schema.Column{ImagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_has_images_products_product_has_image",
				Columns:    []*schema.Column{ProductHasImagesColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductHasInfosColumns holds the columns for the "product_has_infos" table.
	ProductHasInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "product_info_products", Type: field.TypeInt, Nullable: true},
		{Name: "product_info_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductHasInfosTable holds the schema information for the "product_has_infos" table.
	ProductHasInfosTable = &schema.Table{
		Name:       "product_has_infos",
		Columns:    ProductHasInfosColumns,
		PrimaryKey: []*schema.Column{ProductHasInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_has_infos_product_infos_products",
				Columns:    []*schema.Column{ProductHasInfosColumns[7]},
				RefColumns: []*schema.Column{ProductInfosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_has_infos_product_infos_product_has_info",
				Columns:    []*schema.Column{ProductHasInfosColumns[8]},
				RefColumns: []*schema.Column{ProductInfosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_has_infos_products_product_has_info",
				Columns:    []*schema.Column{ProductHasInfosColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductHasProductReferencesColumns holds the columns for the "product_has_product_references" table.
	ProductHasProductReferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "product_reference_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductHasProductReferencesTable holds the schema information for the "product_has_product_references" table.
	ProductHasProductReferencesTable = &schema.Table{
		Name:       "product_has_product_references",
		Columns:    ProductHasProductReferencesColumns,
		PrimaryKey: []*schema.Column{ProductHasProductReferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_has_product_references_product_references_product_has_product_reference",
				Columns:    []*schema.Column{ProductHasProductReferencesColumns[7]},
				RefColumns: []*schema.Column{ProductReferencesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_has_product_references_products_product_has_product_reference",
				Columns:    []*schema.Column{ProductHasProductReferencesColumns[8]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductInfosColumns holds the columns for the "product_infos" table.
	ProductInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "features_values_types_product_info", Type: field.TypeInt, Nullable: true},
		{Name: "info_types_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductInfosTable holds the schema information for the "product_infos" table.
	ProductInfosTable = &schema.Table{
		Name:       "product_infos",
		Columns:    ProductInfosColumns,
		PrimaryKey: []*schema.Column{ProductInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_infos_features_values_types_product_info",
				Columns:    []*schema.Column{ProductInfosColumns[8]},
				RefColumns: []*schema.Column{FeaturesValuesTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_infos_info_types_product_info",
				Columns:    []*schema.Column{ProductInfosColumns[9]},
				RefColumns: []*schema.Column{InfoTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductPricesColumns holds the columns for the "product_prices" table.
	ProductPricesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "default_value", Type: field.TypeFloat64},
		{Name: "min_value", Type: field.TypeFloat64, Nullable: true},
		{Name: "price_type_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductPricesTable holds the schema information for the "product_prices" table.
	ProductPricesTable = &schema.Table{
		Name:       "product_prices",
		Columns:    ProductPricesColumns,
		PrimaryKey: []*schema.Column{ProductPricesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_prices_price_types_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[9]},
				RefColumns: []*schema.Column{PriceTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_prices_products_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[10]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductReferencesColumns holds the columns for the "product_references" table.
	ProductReferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "reference_source_id", Type: field.TypeInt},
		{Name: "value", Type: field.TypeString},
		{Name: "products_product_references", Type: field.TypeInt},
		{Name: "reference_sources_product_references", Type: field.TypeInt},
	}
	// ProductReferencesTable holds the schema information for the "product_references" table.
	ProductReferencesTable = &schema.Table{
		Name:       "product_references",
		Columns:    ProductReferencesColumns,
		PrimaryKey: []*schema.Column{ProductReferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_references_products_product_references",
				Columns:    []*schema.Column{ProductReferencesColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_references_reference_sources_product_references",
				Columns:    []*schema.Column{ProductReferencesColumns[10]},
				RefColumns: []*schema.Column{ReferenceSourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "category_id", Type: field.TypeInt, Nullable: true},
		{Name: "brand_id", Type: field.TypeInt, Nullable: true},
		{Name: "variant_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_references_id", Type: field.TypeInt, Nullable: true},
		{Name: "image_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "stock", Type: field.TypeInt},
		{Name: "brand_products", Type: field.TypeInt, Nullable: true},
		{Name: "category_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_created_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_updated_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_deleted_products", Type: field.TypeInt, Nullable: true},
		{Name: "variant_type_products", Type: field.TypeInt, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_brands_products",
				Columns:    []*schema.Column{ProductsColumns[14]},
				RefColumns: []*schema.Column{BrandsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_categories_products",
				Columns:    []*schema.Column{ProductsColumns[15]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_users_products",
				Columns:    []*schema.Column{ProductsColumns[16]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_users_created_products",
				Columns:    []*schema.Column{ProductsColumns[17]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_users_updated_products",
				Columns:    []*schema.Column{ProductsColumns[18]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_users_deleted_products",
				Columns:    []*schema.Column{ProductsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_variant_types_products",
				Columns:    []*schema.Column{ProductsColumns[20]},
				RefColumns: []*schema.Column{VariantTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PromotionHasProductsColumns holds the columns for the "promotion_has_products" table.
	PromotionHasProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "promotion_id", Type: field.TypeInt},
		{Name: "promocional_price", Type: field.TypeFloat64},
		{Name: "products_promotion_has_product", Type: field.TypeInt},
		{Name: "promotions_promotion_has_product", Type: field.TypeInt},
	}
	// PromotionHasProductsTable holds the schema information for the "promotion_has_products" table.
	PromotionHasProductsTable = &schema.Table{
		Name:       "promotion_has_products",
		Columns:    PromotionHasProductsColumns,
		PrimaryKey: []*schema.Column{PromotionHasProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_has_products_products_promotion_has_product",
				Columns:    []*schema.Column{PromotionHasProductsColumns[10]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "promotion_has_products_promotions_promotion_has_product",
				Columns:    []*schema.Column{PromotionHasProductsColumns[11]},
				RefColumns: []*schema.Column{PromotionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PromotionsColumns holds the columns for the "promotions" table.
	PromotionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "starting_datetime", Type: field.TypeTime},
		{Name: "ending_datetime", Type: field.TypeTime},
	}
	// PromotionsTable holds the schema information for the "promotions" table.
	PromotionsTable = &schema.Table{
		Name:       "promotions",
		Columns:    PromotionsColumns,
		PrimaryKey: []*schema.Column{PromotionsColumns[0]},
	}
	// ReferenceSourcesColumns holds the columns for the "reference_sources" table.
	ReferenceSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// ReferenceSourcesTable holds the schema information for the "reference_sources" table.
	ReferenceSourcesTable = &schema.Table{
		Name:       "reference_sources",
		Columns:    ReferenceSourcesColumns,
		PrimaryKey: []*schema.Column{ReferenceSourcesColumns[0]},
	}
	// ToolHasProductsColumns holds the columns for the "tool_has_products" table.
	ToolHasProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "tool_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "products_tool_has_product", Type: field.TypeInt},
		{Name: "tools_tool_has_product", Type: field.TypeInt},
	}
	// ToolHasProductsTable holds the schema information for the "tool_has_products" table.
	ToolHasProductsTable = &schema.Table{
		Name:       "tool_has_products",
		Columns:    ToolHasProductsColumns,
		PrimaryKey: []*schema.Column{ToolHasProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tool_has_products_products_tool_has_product",
				Columns:    []*schema.Column{ToolHasProductsColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "tool_has_products_tools_tool_has_product",
				Columns:    []*schema.Column{ToolHasProductsColumns[10]},
				RefColumns: []*schema.Column{ToolsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ToolsColumns holds the columns for the "tools" table.
	ToolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// ToolsTable holds the schema information for the "tools" table.
	ToolsTable = &schema.Table{
		Name:       "tools",
		Columns:    ToolsColumns,
		PrimaryKey: []*schema.Column{ToolsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "surname", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VariantTypesColumns holds the columns for the "variant_types" table.
	VariantTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// VariantTypesTable holds the schema information for the "variant_types" table.
	VariantTypesTable = &schema.Table{
		Name:       "variant_types",
		Columns:    VariantTypesColumns,
		PrimaryKey: []*schema.Column{VariantTypesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BrandsTable,
		CategoriesTable,
		FeaturesTable,
		FeaturesUnitValuesTable,
		FeaturesValuesTable,
		FeaturesValuesTypesTable,
		ImageFolderPathsTable,
		ImageFolderSourcesTable,
		ImagesTable,
		InfoTypesTable,
		PriceTypesTable,
		ProductHasFeaturesTable,
		ProductHasImagesTable,
		ProductHasInfosTable,
		ProductHasProductReferencesTable,
		ProductInfosTable,
		ProductPricesTable,
		ProductReferencesTable,
		ProductsTable,
		PromotionHasProductsTable,
		PromotionsTable,
		ReferenceSourcesTable,
		ToolHasProductsTable,
		ToolsTable,
		UsersTable,
		VariantTypesTable,
	}
)

func init() {
	CategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	FeaturesValuesTable.ForeignKeys[0].RefTable = FeaturesTable
	FeaturesValuesTable.ForeignKeys[1].RefTable = FeaturesUnitValuesTable
	FeaturesValuesTable.ForeignKeys[2].RefTable = FeaturesValuesTypesTable
	ImageFolderPathsTable.ForeignKeys[0].RefTable = ImageFolderSourcesTable
	ImagesTable.ForeignKeys[0].RefTable = ImageFolderPathsTable
	ImagesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductHasFeaturesTable.ForeignKeys[0].RefTable = FeaturesTable
	ProductHasFeaturesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductHasImagesTable.ForeignKeys[0].RefTable = ImagesTable
	ProductHasImagesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductHasInfosTable.ForeignKeys[0].RefTable = ProductInfosTable
	ProductHasInfosTable.ForeignKeys[1].RefTable = ProductInfosTable
	ProductHasInfosTable.ForeignKeys[2].RefTable = ProductsTable
	ProductHasProductReferencesTable.ForeignKeys[0].RefTable = ProductReferencesTable
	ProductHasProductReferencesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductInfosTable.ForeignKeys[0].RefTable = FeaturesValuesTypesTable
	ProductInfosTable.ForeignKeys[1].RefTable = InfoTypesTable
	ProductPricesTable.ForeignKeys[0].RefTable = PriceTypesTable
	ProductPricesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductReferencesTable.ForeignKeys[0].RefTable = ProductsTable
	ProductReferencesTable.ForeignKeys[1].RefTable = ReferenceSourcesTable
	ProductsTable.ForeignKeys[0].RefTable = BrandsTable
	ProductsTable.ForeignKeys[1].RefTable = CategoriesTable
	ProductsTable.ForeignKeys[2].RefTable = UsersTable
	ProductsTable.ForeignKeys[3].RefTable = UsersTable
	ProductsTable.ForeignKeys[4].RefTable = UsersTable
	ProductsTable.ForeignKeys[5].RefTable = UsersTable
	ProductsTable.ForeignKeys[6].RefTable = VariantTypesTable
	PromotionHasProductsTable.ForeignKeys[0].RefTable = ProductsTable
	PromotionHasProductsTable.ForeignKeys[1].RefTable = PromotionsTable
	ToolHasProductsTable.ForeignKeys[0].RefTable = ProductsTable
	ToolHasProductsTable.ForeignKeys[1].RefTable = ToolsTable
}
